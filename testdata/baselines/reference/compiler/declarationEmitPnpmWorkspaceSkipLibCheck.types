//// [tests/cases/compiler/declarationEmitPnpmWorkspaceSkipLibCheck.ts] ////

=== /node_modules/.pnpm/@base-lib+react@1.0.0/node_modules/@base-lib/react/index.d.ts ===
export { Tooltip } from "./esm/Tooltip";
>Tooltip : import("/node_modules/.pnpm/@base-lib+react@1.0.0/node_modules/@base-lib/react/esm/Tooltip").TooltipProps & { __internal: import("/node_modules/.pnpm/@base-lib+react@1.0.0/node_modules/@base-lib/react/esm/utils/internal").InternalUtil; }

=== /node_modules/.pnpm/@base-lib+react@1.0.0/node_modules/@base-lib/react/esm/Tooltip.d.ts ===
import { InternalUtil } from "./utils/internal";
>InternalUtil : any

export interface TooltipProps { content: string; }
>content : string

export declare const Tooltip: TooltipProps & { __internal: InternalUtil };
>Tooltip : TooltipProps & { __internal: InternalUtil; }
>__internal : InternalUtil

=== /node_modules/.pnpm/@base-lib+react@1.0.0/node_modules/@base-lib/react/esm/utils/internal.d.ts ===
// Internal utility type - should not be referenceable due to exports field
export interface InternalUtil { __private: never; }
>__private : never

=== /node_modules/@base-lib/react/index.d.ts ===

export * from "../../.pnpm/@base-lib+react@1.0.0/node_modules/@base-lib/react/index.d.ts";

=== /src/component.ts ===
import { Tooltip } from "@base-lib/react";
>Tooltip : import("/node_modules/.pnpm/@base-lib+react@1.0.0/node_modules/@base-lib/react/esm/Tooltip").TooltipProps & { __internal: import("/node_modules/.pnpm/@base-lib+react@1.0.0/node_modules/@base-lib/react/esm/utils/internal").InternalUtil; }

// This function returns a value whose inferred type includes Tooltip with its internal types.
// Without syntacticNodeBuilder, tsgo will:
// 1. Analyze the function body to infer the return type
// 2. Encounter Tooltip type which has __internal: InternalUtil
// 3. Try to serialize InternalUtil type
// 4. Fail to generate clean specifier (blocked by exports)
// 5. Fall back to relative path through .pnpm directory
// 6. With skipLibCheck, should suppress error instead of reporting TS2742
export function createComponent() {
>createComponent : () => { data: import("/node_modules/.pnpm/@base-lib+react@1.0.0/node_modules/@base-lib/react/esm/Tooltip").TooltipProps & { __internal: import("/node_modules/.pnpm/@base-lib+react@1.0.0/node_modules/@base-lib/react/esm/utils/internal").InternalUtil; }; }

  return {
>{    data: Tooltip  } : { data: import("/node_modules/.pnpm/@base-lib+react@1.0.0/node_modules/@base-lib/react/esm/Tooltip").TooltipProps & { __internal: import("/node_modules/.pnpm/@base-lib+react@1.0.0/node_modules/@base-lib/react/esm/utils/internal").InternalUtil; }; }

    data: Tooltip
>data : import("/node_modules/.pnpm/@base-lib+react@1.0.0/node_modules/@base-lib/react/esm/Tooltip").TooltipProps & { __internal: import("/node_modules/.pnpm/@base-lib+react@1.0.0/node_modules/@base-lib/react/esm/utils/internal").InternalUtil; }
>Tooltip : import("/node_modules/.pnpm/@base-lib+react@1.0.0/node_modules/@base-lib/react/esm/Tooltip").TooltipProps & { __internal: import("/node_modules/.pnpm/@base-lib+react@1.0.0/node_modules/@base-lib/react/esm/utils/internal").InternalUtil; }

  };
}


